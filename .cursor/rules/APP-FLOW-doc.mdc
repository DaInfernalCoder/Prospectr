---
description: 
globs: 
alwaysApply: true
---
# Prospectr App Flow Document

Update this rule if user requested changes to the project requirement, etc.

## Onboarding and Sign-In/Sign-Up

When users first visit the Prospectr web application, they land on the home page located at `app/page.js`. This page serves as the entry point with a clean, professional design featuring a hero section that explains Prospectr as an AI-powered LinkedIn prospecting tool for finding and connecting with leads. The color scheme uses the "black" DaisyUI theme defined in `config.js`, ensuring a sleek and modern look. The home page includes clear calls-to-action: a "Sign In" button directing users to `app/signin/page.js` and a "Sign Up" button leading to `app/signup/page.js`. Additional sections may highlight features, pricing (linking to `#pricing`), testimonials, or a demo video. Users can also navigate to informational pages via the footer: Blog at `app/blog/page.js`, Privacy Policy at `app/privacy-policy/page.js`, and Terms of Service at `app/tos/page.js`.

The sign-up page at `app/signup/page.js` offers a straightforward registration process using Supabase Auth. Users enter their email and password or sign up via Google OAuth, triggered by `utils/action.js` with `signInWithGoogle`. Upon successful registration, a confirmation email may be sent if required, and users are redirected to the sign-in page or directly to the dashboard at `app/dashboard/page.js` if auto-login is enabled. If registration fails due to an invalid email or password, an error message appears, keeping users on the sign-up page.

The sign-in page at `app/signin/page.js` allows users to log in with their email and password or Google OAuth. After entering credentials, Supabase Auth verifies them, and upon success, users are redirected to the dashboard at `app/dashboard/page.js`. If authentication fails, an error message displays, and users remain on the sign-in page. The middleware at `middleware.js` ensures session persistence, refreshing tokens if expired, and redirects unauthenticated users from protected routes to `/signin`.

## Main Dashboard

After signing in, users arrive at the dashboard at `app/dashboard/page.js`, the central hub for all activities. The dashboard features a modern, responsive layout using `components/dashboard/DashboardShell.js`, styled with Tailwind CSS and DaisyUI. A sidebar or top navigation menu provides access to key sections: Campaigns at `app/dashboard/campaigns/page.js`, Analytics at `app/dashboard/analytics/page.js`, Settings at `app/dashboard/settings/page.js`, and Upgrade at `app/dashboard/upgrade/page.js`. The main content area displays an overview, including recent campaigns, key metrics like connection requests sent, and notifications such as LinkedIn connection status or subscription reminders. Users can navigate to any section by clicking the respective menu item, instantly transitioning to the chosen page.

## Campaigns Section

The campaigns page at `app/dashboard/campaigns/page.js` lists all user campaigns. Each campaign shows its name, status (active, paused, completed), and metrics like leads targeted and connection rate. A "Create New Campaign" button takes users to `app/dashboard/campaigns/new/page.js`. Clicking a campaign name directs users to its details page at `app/dashboard/campaigns/[id]/page.js`.

The new campaign page at `app/dashboard/campaigns/new/page.js` guides users through campaign creation. It includes a leads selection step at `app/dashboard/campaigns/new/leads/page.js`, where users search LinkedIn profiles using a search interface powered by `app/api/linkedin/search/route.js` and rendered via components like `LinkedInSearch.js`. Users select profiles by checking boxes next to search results, then proceed to the sequence setup at `app/dashboard/campaigns/new/sequence/page.js`. Here, they craft a connection message using a message editor component, possibly `CampaignEditor.js`, with a 300-character limit, template selection, and variable insertion (e.g., first name, company). A review step at `app/dashboard/campaigns/new/review/page.js` lets users confirm settings before launching. Upon submission, the campaign is created via `app/api/linkedin/invitations/send/route.js` using the Unipile API, and users are redirected to the campaigns list or the new campaignâ€™s details page.

The campaign details page at `app/dashboard/campaigns/[id]/page.js` displays comprehensive information about a campaign. It shows the campaign name, status, start date, a list of targeted leads with connection statuses (pending, accepted, ignored), and analytics like connection and response rates. Action buttons allow users to pause, resume, edit, or delete the campaign, with changes saved via API calls like `app/api/lead/route.js`. Users can return to the campaigns list by clicking a back button.

## Settings and Account Management

The settings page at `app/dashboard/settings/page.js` lets users manage their account. It includes sections for updating profile information (name, email), connecting or reconnecting their LinkedIn account via Unipile with `app/api/auths/linkedin/connect/route.js` or `app/api/auths/linkedin/reconnect/route.js`, and managing subscriptions with Stripe integration at `app/api/stripe/create-portal/route.js`. Users can save changes and return to the dashboard by clicking a back button, maintaining their workflow.

## Analytics

The analytics page at `app/dashboard/analytics/page.js` provides detailed insights into prospecting activities. It displays overall performance metrics like total connections and response rates, campaign-specific data, and lead engagement details. Visualizations use charts or tables from `components/ui`, populated by `app/api/linkedin/analytics/route.js`. Users can return to the dashboard via the navigation menu.

## Upgrade

The upgrade page at `app/dashboard/upgrade/page.js` allows users to view and select subscription plans defined in `config.js` (e.g., Pro at $19.99/month, Premium at $49.99/month). It shows plan features and pricing, with a button to initiate checkout via `app/api/stripe/create-checkout/route.js`. After successful payment through Stripe, users are redirected to the dashboard, and their subscription updates in Supabase.

## Blog and Informational Pages

The blog page at `app/blog/page.js` lists articles on prospecting and LinkedIn tips. Each article links to its page at `app/blog/[articleId]/page.js`, displaying full content with navigation to related articles, author pages at `app/blog/author/[authorId]/page.js`, or category pages at `app/blog/category/[categoryId]/page.js`. The privacy policy at `app/privacy-policy/page.js` and terms of service at `app/tos/page.js` are static pages accessible from the footer, providing legal information.

## Survey and Thank You Pages

The survey page at `app/survey/page.js` collects user feedback, rendered with components like `SurveyTable.js`. After submission, users are redirected to the thank you page at `app/thankyou/page.js`, acknowledging their input with a return link to the dashboard.

## Error States and Alternate Paths

The app handles errors with custom pages: `app/error.js` for general errors and `app/not-found.js` for 404s. If users access a protected route without authentication, middleware redirects them to `/signin`. Failed API calls (e.g., LinkedIn search errors) display messages on the current page, offering retry options. Subscription checks via `utils/check-subscription.js` redirect non-subscribers to `#pricing` or a checkout session, ensuring access control.

## Conclusion and Overall App Journey

The journey through Prospectr is intuitive and efficient. It starts with a professional home page guiding users to sign up or sign in. After authentication, the dashboard provides a central hub for campaigns, analytics, settings, and upgrades. The campaigns section enables users to create, manage, and monitor LinkedIn outreach with precise controls and analytics. Settings offer account personalization, while the upgrade page facilitates subscription changes. The blog provides resources, and survey/thank you pages enhance user engagement. Navigation is seamless with menu links and buttons, supported by robust error handling, ensuring users always have a clear path forward in their prospecting tasks.